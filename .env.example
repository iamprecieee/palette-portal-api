# Debug setting for development
DEBUG=True

# Postgresql configuration (also will be used to setup Docker postgres service)
DB_NAME=<your_preferred_db_name>
DB_HOST=<your_preferred_db_hostname> # Set as "palette_db" or modify the docker-compose.yml
DB_USER=<your_preferred_db_username>
DB_PASSWORD=<your_preferred_db_password>
DB_PORT=5432

# Cloudinary storage credentials
CLOUD_NAME=<your_cloud_name>
API_KEY=<your_cloud_api_key>
API_SECRET=<your_cloud_api_secret>

# Redis password for Docker setup (free to set different passwords for each service)
REDIS_PASSWORD=<your_preferred_redis_password>

# Redis credentials for default cache, session cache, and chat channels respectively
# Set each hostname as "redis", "session_redis", "chat_redis", or modify existing hostnames in docker-compose file
REDIS_URL=redis://default:<your_default_redis_password>@<your_default_redis_hostname>:6379/<db_instance_index>
SESSION_CACHE_REDIS_URL=redis://default:<your_session_redis_password>@<your_session_redis_hostname>:6379/<db_instance_index>
CHAT_REDIS_URL=redis://default:<your_channels_redis_password>@<your_channels_redis_hostname>:6379/<db_instance_index>

RABBITMQ_USER=<your_rabbitmq_username>
RABBITMQ_PASSWORD=<your_rabbitmq_password>
CELERY_BROKER_URL=amqp://<your_rabbitmq_username>:<your_rabbitmq_password>@rabbitmq:5672
CELERY_RESULT_BACKEND=redis://default:<your_celery_redis_password>@redis:6379/<db_instance_index>

SOCIAL_AUTH_TWITTER_KEY=<your_twitter_key>
SOCIAL_AUTH_TWITTER_SECRET=<your_twitter_secret>

SOCIAL_AUTH_GOOGLE_OAUTH2_KEY=<your_google_key>
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET=<your_google_secret>

SSL_KEYFILE=certs/key.pem
SSL_CERTFILE=certs/cert.pem

CURRENT_HOST=<your_current_host>
EMAIL_BACKEND=<your_email_backend>
EMAIL_HOST=<your_email_host>
EMAIL_PORT=<your_email_port>
EMAIL_HOST_USER=<your_email_host_user>
EMAIL_HOST_PASSWORD=<your_email_host_password>
SENDER_EMAIL=<your_sender_email>